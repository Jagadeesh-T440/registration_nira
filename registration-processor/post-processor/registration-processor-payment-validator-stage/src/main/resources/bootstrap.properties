spring.cloud.config.uri=http://localhost:51000/config
spring.cloud.config.label=1.2.0.1-v3
spring.application.name=application,registration-processor
spring.profiles.active=default
spring.cloud.config.name=registration-processor
config.server.file.storage.uri=${spring.cloud.config.uri}/${packet.info.storage.service}/${spring.profiles.active}/${spring.cloud.config.label}/

#spring.datasource.url=${javax.persistence.jdbc.url}
#spring.datasource.username=${javax.persistence.jdbc.user}
#spring.datasource.password=${javax.persistence.jdbc.password}
#spring.datasource.hikari.schema=regprc
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.hibernate.ddl-auto=update

#Required for micro services that needs to call another secured micro service call
security.oauth2.client.client-id=${pgateway.iam.adapter.clientid}
security.oauth2.client.client-secret=${pgateway.iam.adapter.clientsecret}
security.oauth2.client.user-authorization-uri=${pgateway.iam.adapter.auth-server-url}/realms/payment-gateway/protocol/openid-connect/auth
security.oauth2.client.access-token-uri=${pgateway.iam.adapter.auth-server-url}/realms/payment-gateway/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=client_credentials



gateway.payment.service.api.get-prn-status=${gateway.payment.service.api.get-prn-status}
gateway.payment.service.api.check-if-prn-consumed=${gateway.payment.service.api.check-if-prn-consumed}
gateway.payment.service.api.consume-prn=${gateway.payment.service.api.consume-prn}
gateway.payment.service.api.check-logs=${gateway.payment.service.api.check-logs}